{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { loginMessages } from '../common/Constants';\n\nvar Modal = require('react-bootstrap-modal');\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Email: '',\n      Password: '',\n      show: true\n    };\n    this.Password = this.Password.bind(this);\n    this.Email = this.Email.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  Email(event) {\n    this.setState({\n      Email: event.target.value\n    });\n  }\n\n  Password(event) {\n    this.setState({\n      Password: event.target.value\n    });\n  }\n\n  login(event) {\n    debugger;\n\n    if (this.state.Email === 'admin' && this.state.Password === 'admin') {\n      this.props.history.push(\"/AdminDashboard\");\n    } else if (this.state.Email != '' && this.state.Password != '') {\n      this.props.history.push(\"/Dashboard\");\n    } else {\n      alert(loginMessages.ERROR);\n    } // debugger;\n\n    /* fetch('http://localhost:51282/Api/login/Login', {\n         method: 'post',\n         headers: {\n             'Accept': 'application/json',\n             'Content-Type': 'application/json'\n         },\n         body: JSON.stringify({\n             Email: this.state.Email,\n             Password: this.state.Password\n         })\n     }).then((Response) => Response.json())\n         .then((result) => {\n             console.log(result);\n             if (result.Status == 'Invalid')\n                 alert('Invalid User');\n             else\n                 this.props.history.push(\"/Dashboard\");\n          })*/\n    //this.props.history.push(\"/Dashboard\");\n\n  }\n\n  render() {\n    let closeModal = () => this.setState({\n      open: false\n    });\n\n    let saveAndClose = () => {\n      /*api.saveData()\n        .then(() => this.setState({ open: false }))*/\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Launch modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.open,\n        onHide: closeModal,\n        \"aria-labelledby\": \"ModalHeader\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"ModalHeader\",\n            children: \"A Title Goes here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Some Content here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [\"// If you don't have anything fancy to do you can use // the convenient `Dismiss` component, it will // trigger `onHide` when clicked\", /*#__PURE__*/_jsxDEV(Modal.Dismiss, {\n            className: \"btn btn-default\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), \"// Or you can create your own dismiss buttons\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: saveAndClose,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n    /*\n                <Row className=\"justify-content-center login-div\">\n                <Col md=\"9\" lg=\"7\" xl=\"6\">\n                    <CardGroup>\n                        <Card className=\"p-2\">\n                            <CardBody>\n                                <Form>\n                                    <InputGroup className=\"mb-3\">\n                                        <Input type=\"text\" onChange={this.Email} placeholder=\"Enter Email\" />\n                                    </InputGroup>\n                                    <InputGroup className=\"mb-4\">\n                                        <Input type=\"password\" onChange={this.Password} placeholder=\"Enter Password\" />\n                                    </InputGroup>\n                                    <Button  color=\"success\"  onClick={this.login} >Login</Button>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </CardGroup>\n                </Col>\n            </Row> */\n    ;\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js"],"names":["React","Component","Button","Card","CardBody","CardGroup","Col","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","loginMessages","Modal","require","Login","constructor","state","Email","Password","show","bind","login","event","setState","target","value","props","history","push","alert","ERROR","render","closeModal","open","saveAndClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport {loginMessages} from '../common/Constants';\nvar Modal = require('react-bootstrap-modal')\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            Email: '',\n            Password: '',\n            show: true\n        }\n        this.Password = this.Password.bind(this);\n        this.Email = this.Email.bind(this);\n        this.login = this.login.bind(this);\n    }\n    Email(event) {\n        this.setState({ Email: event.target.value })\n    }\n    Password(event) {\n        this.setState({ Password: event.target.value })\n    }\n    login(event) {\n        debugger;\n        if(this.state.Email === 'admin' && this.state.Password === 'admin') {\n            this.props.history.push(\"/AdminDashboard\");\n        } else if(this.state.Email != '' && this.state.Password!= '') {\n            this.props.history.push(\"/Dashboard\");\n        } else {\n            alert(loginMessages.ERROR);\n        }\n       // debugger;\n       /* fetch('http://localhost:51282/Api/login/Login', {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                Email: this.state.Email,\n                Password: this.state.Password\n            })\n        }).then((Response) => Response.json())\n            .then((result) => {\n                console.log(result);\n                if (result.Status == 'Invalid')\n                    alert('Invalid User');\n                else\n                    this.props.history.push(\"/Dashboard\");\n\n            })*/\n            //this.props.history.push(\"/Dashboard\");\n\n    } \n    render() {\n        let closeModal = () => this.setState({ open: false })\n \n        let saveAndClose = () => {\n          /*api.saveData()\n            .then(() => this.setState({ open: false }))*/\n        }\n     \n        return (\n            <div>\n        <button type='button'>Launch modal</button>\n \n        <Modal\n          show={this.state.open}\n          onHide={closeModal}\n          aria-labelledby=\"ModalHeader\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id='ModalHeader'>A Title Goes here</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>Some Content here</p>\n          </Modal.Body>\n          <Modal.Footer>\n            // If you don't have anything fancy to do you can use\n            // the convenient `Dismiss` component, it will\n            // trigger `onHide` when clicked\n            <Modal.Dismiss className='btn btn-default'>Cancel</Modal.Dismiss>\n \n            // Or you can create your own dismiss buttons\n            <button className='btn btn-primary' onClick={saveAndClose}>\n              Save\n            </button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n/*\n            <Row className=\"justify-content-center login-div\">\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\n                <CardGroup>\n                    <Card className=\"p-2\">\n                        <CardBody>\n                            <Form>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" onChange={this.Email} placeholder=\"Enter Email\" />\n                                </InputGroup>\n                                <InputGroup className=\"mb-4\">\n                                    <Input type=\"password\" onChange={this.Password} placeholder=\"Enter Password\" />\n                                </InputGroup>\n                                <Button  color=\"success\"  onClick={this.login} >Login</Button>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </CardGroup>\n            </Col>\n        </Row> */\n        );\n    }\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}