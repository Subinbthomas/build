{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js\";\nimport React, { Component } from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Modal, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { loginMessages } from '../common/Constants';\n\nclass Popup extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.closePopup,\n          children: \"close me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Email: '',\n      Password: '',\n      showPopup: false\n    };\n    this.Password = this.Password.bind(this);\n    this.Email = this.Email.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n  Email(event) {\n    this.setState({\n      Email: event.target.value\n    });\n  }\n\n  Password(event) {\n    this.setState({\n      Password: event.target.value\n    });\n  }\n\n  login(event) {\n    debugger;\n\n    if (this.state.Email === 'admin' && this.state.Password === 'admin') {\n      this.props.history.push(\"/AdminDashboard\");\n    } else if (this.state.Email != '' && this.state.Password != '') {\n      this.props.history.push(\"/Dashboard\");\n    } else {\n      alert(loginMessages.ERROR);\n    } // debugger;\n\n    /* fetch('http://localhost:51282/Api/login/Login', {\n         method: 'post',\n         headers: {\n             'Accept': 'application/json',\n             'Content-Type': 'application/json'\n         },\n         body: JSON.stringify({\n             Email: this.state.Email,\n             Password: this.state.Password\n         })\n     }).then((Response) => Response.json())\n         .then((result) => {\n             console.log(result);\n             if (result.Status == 'Invalid')\n                 alert('Invalid User');\n             else\n                 this.props.history.push(\"/Dashboard\");\n          })*/\n    //this.props.history.push(\"/Dashboard\");\n\n  }\n\n  render() {\n    let closeModal = () => this.setState({\n      open: false\n    });\n\n    let saveAndClose = () => {\n      /*api.saveData()\n        .then(() => this.setState({ open: false }))*/\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hihi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.togglePopup.bind(this),\n        children: \"show popup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), this.state.showPopup ? /*#__PURE__*/_jsxDEV(Popup, {\n        text: \"Close Me\",\n        closePopup: this.togglePopup.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n    /*\n    return (\n    \n     <Row className=\"justify-content-center login-div\">\n      <Col md=\"9\" lg=\"7\" xl=\"6\">\n          <CardGroup>\n              <Card className=\"p-2\">\n                  <CardBody>\n                      <Form>\n                          <InputGroup className=\"mb-3\">\n                              <Input type=\"text\" onChange={this.Email} placeholder=\"Enter Email\" />\n                          </InputGroup>\n                          <InputGroup className=\"mb-4\">\n                              <Input type=\"password\" onChange={this.Password} placeholder=\"Enter Password\" />\n                          </InputGroup>\n                          <Button  color=\"success\"  onClick={this.login} >Login</Button>\n                      </Form>\n                  </CardBody>\n              </Card>\n          </CardGroup>\n      </Col>\n    </Row> \n     ); */\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js"],"names":["React","Component","Button","Card","CardBody","CardGroup","Col","Modal","Container","Form","Input","InputGroup","InputGroupAddon","InputGroupText","Row","loginMessages","Popup","render","props","text","closePopup","Login","constructor","state","Email","Password","showPopup","bind","login","togglePopup","setState","event","target","value","history","push","alert","ERROR","closeModal","open","saveAndClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Modal, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport {loginMessages} from '../common/Constants';\n\nclass Popup extends React.ComponentÂ {\n    render() {\n      return (\n        <div className='popup'>\n          <div className='popup_inner'>\n            <h1>{this.props.text}</h1>\n          <button onClick={this.props.closePopup}>close me</button>\n          </div>\n        </div>\n      );\n    }\n  }\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            Email: '',\n            Password: '',\n            showPopup: false\n        }\n        this.Password = this.Password.bind(this);\n        this.Email = this.Email.bind(this);\n        this.login = this.login.bind(this);\n    }\n    togglePopup() {\n        this.setState({\n          showPopup: !this.state.showPopup\n        });\n      }\n    Email(event) {\n        this.setState({ Email: event.target.value })\n    }\n    Password(event) {\n        this.setState({ Password: event.target.value })\n    }\n    login(event) {\n        debugger;\n        if(this.state.Email === 'admin' && this.state.Password === 'admin') {\n            this.props.history.push(\"/AdminDashboard\");\n        } else if(this.state.Email != '' && this.state.Password!= '') {\n            this.props.history.push(\"/Dashboard\");\n        } else {\n            alert(loginMessages.ERROR);\n        }\n       // debugger;\n       /* fetch('http://localhost:51282/Api/login/Login', {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                Email: this.state.Email,\n                Password: this.state.Password\n            })\n        }).then((Response) => Response.json())\n            .then((result) => {\n                console.log(result);\n                if (result.Status == 'Invalid')\n                    alert('Invalid User');\n                else\n                    this.props.history.push(\"/Dashboard\");\n\n            })*/\n            //this.props.history.push(\"/Dashboard\");\n\n    } \n    render() {\n        let closeModal = () => this.setState({ open: false })\n \n        let saveAndClose = () => {\n          /*api.saveData()\n            .then(() => this.setState({ open: false }))*/\n        }\n     \n        return (\n            <div className='app'>\n              <h1>hihi</h1>\n              <button onClick={this.togglePopup.bind(this)}>show popup</button>\n              {this.state.showPopup ? \n                <Popup\n                  text='Close Me'\n                  closePopup={this.togglePopup.bind(this)}\n                />\n                : null\n              }\n            </div>\n          );\n          /*\n        return (\n          \n           <Row className=\"justify-content-center login-div\">\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\n                <CardGroup>\n                    <Card className=\"p-2\">\n                        <CardBody>\n                            <Form>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" onChange={this.Email} placeholder=\"Enter Email\" />\n                                </InputGroup>\n                                <InputGroup className=\"mb-4\">\n                                    <Input type=\"password\" onChange={this.Password} placeholder=\"Enter Password\" />\n                                </InputGroup>\n                                <Button  color=\"success\"  onClick={this.login} >Login</Button>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </CardGroup>\n            </Col>\n        </Row> \n\n\n\n        ); */\n    }\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}