[{"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/index.js":"1","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/reportWebVitals.js":"2","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js":"3","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Dashboard.js":"4","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Constants.js":"5","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Quote.js":"6","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Header.js":"7","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteList.js":"8","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteDetail.js":"9","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Routes.js":"10","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Footer.js":"11","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/AdminDashboard.js":"12","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInventory.js":"13","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditInventory.js":"14","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageOperations.js":"15","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditOperations.js":"16","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Utils.js":"17","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageWorker.js":"18","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditWorker.js":"19","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageProjects.js":"20","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditProject.js":"21","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageCustomer.js":"22","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditCustomer.js":"23","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInspections.js":"24","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/auth.service.js":"25","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/admin.service.js":"26","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Upload.js":"27","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/user.service.js":"28","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ForgotPassword.js":"29","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditQuote.js":"30","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageQuote.js":"31","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/MyAlert.js":"32","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Popup.js":"33","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Sidebar.js":"34","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerDashboard.js":"35","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerOperations.js":"36","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerProjects.js":"37","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerTimesheet.js":"38","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ToolsList.js":"39","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Checkbox.js":"40","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/OperationList.js":"41","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ConfigureOperation.js":"42","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableRow.js":"43","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableHeader.js":"44","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Profile.js":"45","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/worker.service.js":"46"},{"size":410,"mtime":1630695188461,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1611647184538,"results":"49","hashOfConfig":"48"},{"size":5251,"mtime":1630692541546,"results":"50","hashOfConfig":"48"},{"size":2983,"mtime":1629427790748,"results":"51","hashOfConfig":"48"},{"size":574,"mtime":1631563677734,"results":"52","hashOfConfig":"48"},{"size":9943,"mtime":1631583586153,"results":"53","hashOfConfig":"48"},{"size":1884,"mtime":1630694576908,"results":"54","hashOfConfig":"48"},{"size":4192,"mtime":1631562199720,"results":"55","hashOfConfig":"48"},{"size":20184,"mtime":1631583818247,"results":"56","hashOfConfig":"48"},{"size":1216,"mtime":1625797895746,"results":"57","hashOfConfig":"48"},{"size":358,"mtime":1612063115281,"results":"58","hashOfConfig":"48"},{"size":2611,"mtime":1630695262470,"results":"59","hashOfConfig":"48"},{"size":8452,"mtime":1631560748035,"results":"60","hashOfConfig":"48"},{"size":7172,"mtime":1630472094472,"results":"61","hashOfConfig":"48"},{"size":8493,"mtime":1631560452603,"results":"62","hashOfConfig":"48"},{"size":11903,"mtime":1631080242740,"results":"63","hashOfConfig":"48"},{"size":1032,"mtime":1631596646493,"results":"64","hashOfConfig":"48"},{"size":7873,"mtime":1631080544580,"results":"65","hashOfConfig":"48"},{"size":7864,"mtime":1630792023999,"results":"66","hashOfConfig":"48"},{"size":9303,"mtime":1630561340357,"results":"67","hashOfConfig":"48"},{"size":10606,"mtime":1631561137878,"results":"68","hashOfConfig":"48"},{"size":7204,"mtime":1631560522808,"results":"69","hashOfConfig":"48"},{"size":4566,"mtime":1630703435731,"results":"70","hashOfConfig":"48"},{"size":11390,"mtime":1630340976035,"results":"71","hashOfConfig":"48"},{"size":1631,"mtime":1630563857840,"results":"72","hashOfConfig":"48"},{"size":11261,"mtime":1630703149574,"results":"73","hashOfConfig":"48"},{"size":1372,"mtime":1623734059427,"results":"74","hashOfConfig":"48"},{"size":2484,"mtime":1630431721149,"results":"75","hashOfConfig":"48"},{"size":1582,"mtime":1624509978010,"results":"76","hashOfConfig":"48"},{"size":21006,"mtime":1631598177370,"results":"77","hashOfConfig":"48"},{"size":7311,"mtime":1631030746072,"results":"78","hashOfConfig":"48"},{"size":386,"mtime":1630692468135,"results":"79","hashOfConfig":"48"},{"size":2049,"mtime":1630694740546,"results":"80","hashOfConfig":"48"},{"size":3269,"mtime":1630693936976,"results":"81","hashOfConfig":"48"},{"size":1779,"mtime":1630653254288,"results":"82","hashOfConfig":"48"},{"size":5826,"mtime":1631562561761,"results":"83","hashOfConfig":"48"},{"size":6059,"mtime":1631562700034,"results":"84","hashOfConfig":"48"},{"size":562,"mtime":1626152776745,"results":"85","hashOfConfig":"48"},{"size":4472,"mtime":1627573905514,"results":"86","hashOfConfig":"48"},{"size":369,"mtime":1626846725760,"results":"87","hashOfConfig":"48"},{"size":3091,"mtime":1627619563041,"results":"88","hashOfConfig":"48"},{"size":8676,"mtime":1629743472912,"results":"89","hashOfConfig":"48"},{"size":1397,"mtime":1630692934443,"results":"90","hashOfConfig":"48"},{"size":563,"mtime":1630692946468,"results":"91","hashOfConfig":"48"},{"size":3131,"mtime":1630716871357,"results":"92","hashOfConfig":"48"},{"size":559,"mtime":1630716678295,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"oxb9l2",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/index.js",[],["201","202"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/reportWebVitals.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Login.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Dashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Constants.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/Quote.js",["203","204"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Header.js",["205"],"import React, { Component } from 'react';\n\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Button, ButtonGroup } from 'reactstrap';\nimport LogoImage from '../../images/Logo.png';\nimport Popup from \"../components/Popup\";\n\nclass Header extends Component {\n    state = {\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n    }\n    handleClose = (list) => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n    logOut() {\n        localStorage.removeItem(\"user\");\n    }\n    showProfile() {\n        this.setState({\n            isPopupOpen: true,\n            popupConfig: {\n                header: \"Manage Profiile\",\n                body: \"\",\n                type: \"profile\"\n            }\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"page-header sticky-top\">\n                    <img className=\"logo-header\" alt=\"Logo\" src={LogoImage} />\n                    <div className=\"float-right\">\n                        <Dropdown as={ButtonGroup}>\n                            <Button >{JSON.parse(localStorage.getItem('user')).userName}</Button>\n                            <Dropdown.Toggle split variant=\"info\" id=\"dropdown-split-basic\" />\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={() => this.showProfile()}>Profile</Dropdown.Item>\n                                <Dropdown.Item href=\"/\" onClick={() => this.logOut()}>Logout</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </div>\n                <Popup popupConfig={this.state.popupConfig} openFlag={this.state.isPopupOpen} parentCloseCallback={this.handleClose}></Popup>\n            </React.Fragment>\n        );\n    }\n}\nexport default Header;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteList.js",["206"],"import React, { Component } from 'react';\nimport UserService from \"../services/user.service\";\n\nclass QuoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.getAllQuotes();\n    }\n    \n\n    state = {\n        activeId : 0,\n        searchValue: \"\",\n        listitems: []\n\n    }\n\n    selectQuote(item) {\n        this.props.parentCallback(item);\n        this.setState({\n            activeId:item.id\n          });\n    }\n\n    getAllQuotes() {\n        UserService.getAllQuotes().then(\n            response => {\n                this.setState({\n                    listitems: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n\n    handleChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"list-group-header section-header row\">\n                    <div className=\"col-4\">\n                        <span className=\"mb-1 underline\">My Quote</span>\n                        <span className=\"mb-1 blue-color pl-2\">Requests</span>\n                    </div>\n                    <div className=\"col-8\">\n                        <div className=\"has-search\">\n                            <span className=\"fa fa-search form-control-feedback\"></span>\n                            <input type=\"text\" className=\"form-control search-box\" onChange={this.handleChange} placeholder=\"Search quotes...\" />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"list-group\">\n\n                    {this.state.listitems && this.state.listitems.filter(item =>\n                        item.title.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                            <a className={\n                                (listitem.id === this.state.activeId ? \" active list-group-item list-group-item-action\" : \"list-group-item list-group-item-action\")\n                              }\n                            aria-current=\"true\" key={listitem.id} id={listitem.id} onClick={() => this.selectQuote(listitem)} >\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1 underline half\">{listitem.title}</h5>\n\n                                </div>\n                                <p className=\"mb-1 ellipses_two\">{listitem.desc}</p>\n                                <div>\n                                    {listitem.tools && listitem.tools.map(tool => (\n                                        <span className=\"badge tool-badge\">{tool}</span>\n                                    )\n                                    )}\n                                </div>\n                                <div className=\"row list-item-detail\">\n                                    <div className=\"col-2 calender-icon\">\n                                        <small>{(new Date(listitem.createdAt)).toLocaleDateString()}</small>\n                                    </div>\n                                    <div className=\"col-5 flag-icon\">\n                                        <small>{listitem.status}</small>\n                                        <span className=\"date-badge badge\">{(new Date(listitem.updatedAt)).toLocaleDateString()}</span>\n                                    </div>\n\n                                    <div className=\"col-3 attachment-icon\">\n                                        <small>{listitem.Uploads}</small>\n                                        <small> Attachments</small>\n                                    </div>\n                                    <div className=\"col-2 rightarrow-icon\">\n                                        <small>View details</small>\n                                    </div>\n                                </div>\n                            </a>\n\n                        ))}\n\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\nexport default QuoteList;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/user/QuoteDetail.js",["207","208","209","210"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Routes.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Footer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/AdminDashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInventory.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditInventory.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageOperations.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditOperations.js",["211","212","213","214","215","216","217"],"import React, { Component } from 'react';\n\nimport MyAlert from \"../components/MyAlert\";\nimport AdminService from \"../services/admin.service\";\n\nclass EditOperations extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: [],\n            toolsList: [],\n            selectedTool: {},\n            showAlert: false,\n            alertConfig: {\n                \"variant\": \"danger\"\n            },\n            //workerList: [],\n            //selectedWorker: {}\n        }\n        this.getOperationById();\n        this.getAllTools();\n        //this.getAllWorkers();\n    }\n    getOperationById() {\n        AdminService.getOperationById(this.props.selectedId).then(\n            response => {\n                this.setState({\n                    item: response.data\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    getAllTools() {\n        AdminService.getAllInventory().then(\n            response => {\n                this.setState({\n                    toolsList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    /*getAllWorkers() {\n        AdminService.getAllWorkers().then(\n            response => {\n                this.setState({\n                    workerList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    } */\n\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    handleToolSelection(event) {\n        var selectedTool = this.state.toolsList.find(o => o.id == event.target.value);\n        var newToolItem = {\n            \"Inventories\": selectedTool,\n            \"req_avail\": this.state.item.toolRequired\n        };\n        this.setState({ selectedTool: newToolItem });\n    }\n    /*handleWorkerSelection(event) {\n        this.state.selectedWorker = this.state.workerList.find(o => o.id == event.target.value);\n    }*/\n    showAlertMessage(msg) {\n        this.setState(prevState => ({\n            alertConfig: { \n                ...prevState.alertConfig,\n                message: msg\n            },\n            showAlert: true \n        }))\n    }\n\n    addTools(event) {\n        if (!this.state.selectedTool.Inventories || !this.state.item.toolRequired) {\n            this.showAlertMessage(\"Please select Tools / Materials and add Required quantity\");\n        } else {\n            this.setState({ showAlert: false });\n\n            if (this.state.item.id) {\n\n                this.state.selectedTool['req_avail'] = this.state.item.toolRequired;\n                var selectedOperation = this.state.item;\n                selectedOperation.OperationInventories.push(this.state.selectedTool);\n                this.setState({ item: selectedOperation });\n            } else {\n                var selectedOperation = this.state.item;\n                if (!selectedOperation.OperationInventories) {\n                    selectedOperation['OperationInventories'] = [];\n                }\n                var required_qty = this.state.item.toolRequired;\n                this.state.selectedTool['req_avail'] = required_qty;\n\n                selectedOperation.OperationInventories.push(this.state.selectedTool);\n                this.setState({ item: selectedOperation });\n            }\n        }\n    }\n    /*addWorker(event) {\n        if (this.state.item.id) {\n            this.state.selectedWorker['required_hrs'] = this.state.item.workerRequired;\n            this.state.selectedWorker['est_cost'] = parseInt(this.state.item.workerRequired) * parseInt(this.state.selectedWorker.cost_per_hr);\n            var selectedOperation = this.state.item;\n            selectedOperation.OperationWorkers.push(this.state.selectedWorker);\n            this.setState({ item: selectedOperation });\n        } else {\n            debugger;\n            var selectedOperation = this.state.item;\n            if (!selectedOperation.OperationWorkers) {\n                selectedOperation['OperationWorkers'] = [];\n            }\n            this.state.selectedWorker['required_hrs'] = this.state.item.workerRequired;\n            this.state.selectedWorker['est_cost'] = parseInt(this.state.item.workerRequired) * parseInt(this.state.selectedWorker.cost_per_hr);\n\n            selectedOperation.OperationWorkers.push(this.state.selectedWorker);\n            this.setState({ item: selectedOperation });\n        }\n\n    }*/\n\n    saveOperation() {\n        console.log(this.state.item);\n        var tmpworkerobj = [];\n        this.state.item.OperationWorkers.map((item, i) => {\n            if (item.id) {\n                var workerobj = {};\n                workerobj[\"id\"] = item.id;\n                workerobj[\"required_hrs\"] = item.required_hrs;\n                workerobj[\"est_cost\"] = item.est_cost;\n                tmpworkerobj.push(workerobj);\n            }\n        });\n        var tmpInvobj = [];\n        this.state.item.OperationInventories.map((item, i) => {\n            if (item.id) {\n                var invobj = {};\n                invobj[\"id\"] = item.id;\n                invobj[\"required_qty\"] = item.required_qty;\n                tmpInvobj.push(invobj);\n            }\n        });\n        var data = {\n            \"name\": this.state.item.name,\n            \"desc\": this.state.item.desc,\n            \"items\": tmpInvobj,\n            \"workers\": tmpworkerobj\n        };\n\n\n\n        if (this.state.item.id != undefined) {\n            AdminService.editOperation(this.state.item.id, data).then(\n                response => {\n                    console.log(response.data.message);\n                    //this.showPopupMessage(response.data.message);\n                },\n                error => {\n                    console.log(\"Error\");\n                }\n            );\n        } else {\n\n            AdminService.createOperation(data).then(\n                response => {\n                    console.log(response.data.message);\n                    //this.showPopupMessage(response.data.message);\n                },\n                error => {\n                    console.log(\"Error\");\n                }\n            );\n        }\n        this.props.parentCallback();\n    }\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n    renderToolsList() {\n        return (\n            <div className=\"col\">\n                <div className=\"row\">\n                    <div className=\"col-6\"><span>Tools and Materials</span></div>\n                    <div className=\"col-6\"><span>Required</span></div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <select className=\"form-control\" onChange={this.handleToolSelection.bind(this)}>\n                            <option>Select Tools</option>\n                            {this.state.toolsList.map((toolItem) => (\n                                <option key={toolItem.id} value={toolItem.id}>{toolItem.itemName}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"col-6\">\n                        <input type=\"number\" className=\"form-control col-6 d-inline\" onChange={this.handleChange.bind(this, 'toolRequired')} />\n                        <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4 d-inline\" onClick={this.addTools.bind(this)}>Add</button>\n                    </div>\n                    <div className=\"font-italic text-center col-8\">\n                    {this.state.showAlert && < MyAlert alertConfig = {this.state.alertConfig} /> }\n                    </div>\n                    \n                </div>\n                <div className=\"row mt-1 quote-req-header font-weight-bold\">\n                    <div className=\"col-sm\">\n                        <label>Tool/Material Name</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Required</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Availability</label>\n                    </div>\n                </div>\n\n                {this.state.item.OperationInventories.map((item) => (\n\n                    <div className=\"row mt-1\">\n                        <div className=\"col-sm\">\n                            <label>{item.Inventories && item.Inventories.itemName}</label>\n                        </div>\n                        <div className=\"col-sm\">\n                            <label>{item.req_avail}</label>\n                        </div>\n                        <div className=\"col-sm\">\n                            <label>{item.Inventories && item.Inventories.availability}</label>\n                        </div>\n                    </div>\n\n                ))}\n            </div>\n\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.item &&\n                    <div className=\"col edit-inventory\">\n                        <div className=\"list-group-header section-header row\">\n                            <div className=\"col-4\">\n\n                                <nav aria-label=\"breadcrumb\">\n                                    <ul className=\"breadcrumb\">\n                                        <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                            <span className=\"mb-1 underline\">Manage</span>\n                                            <span className=\"mb-1 blue-color pl-2\">Operation</span>\n                                        </li>\n                                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                                            <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                            <span className=\"mb-1 blue-color pl-2\">Operation</span>\n                                        </li>\n                                    </ul>\n                                </nav>\n\n                            </div>\n                            <div className=\"col-8 text-right\">\n                                <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                                <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveOperation()}>Save</button>\n                            </div>\n                        </div>\n\n                        <div className=\"blue-box-div row\">\n                            <div className=\"col-4 white-border-right\">\n                                <div>\n                                    <span>Operation Name</span>\n                                    <input type=\"text\"\n                                        className=\"form-control\" defaultValue={this.state.item.name}\n                                        onChange={this.handleChange.bind(this, 'name')} />\n                                </div>\n                                <div>\n                                    <span>Description</span>\n                                    <textarea className=\"form-control\" rows=\"3\"\n                                        defaultValue={this.state.item.desc}\n                                        onChange={this.handleChange.bind(this, 'desc')}></textarea>\n                                </div>\n\n                            </div>\n                            {this.state.item.OperationInventories && this.renderToolsList()}\n\n\n                        </div>\n                    </div>\n                }\n\n            </React.Fragment>\n        );\n    }\n}\nexport default EditOperations;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Utils.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageWorker.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditWorker.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageProjects.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditProject.js",["218","219","220"],"import React, { Component } from 'react';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AdminService from \"../services/admin.service\";\nimport Popup from \"../components/Popup\";\n\nclass EditProject extends Component {\n    constructor(props) {\n        super(props);\n        this.getAllWorkers();\n    }\n    state = {\n        item: this.props.selectedItem,\n        workerList: [],\n        selectedWorker: {},\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    handleDateChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = new Date(event);\n        this.setState({ item: item });\n    }\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n    showPopupMessage(message) {\n        this.setState({\n          isPopupOpen: true,\n          popupConfig: {\n            header: \"Message\",\n            body: message,\n            type: \"message\"\n          }\n        });\n    }\n    saveProject() {\n        \n        debugger;\n        var data = {\n            \"name\": this.state.item.name,\n            \"desc\": this.state.item.desc,\n            \"startDate\": this.state.item.start_date,\n            \"endDate\": this.state.item.end_date,\n            \"workers\": this.state.item.workers\n        };\n        AdminService.editProject(this.state.item.id,data).then(\n            response => {\n                this.showPopupMessage(response.data.message);\n                this.props.parentCallback();\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n    getAllWorkers() {\n        AdminService.getAllWorkers().then(\n            response => {\n                this.setState({\n                    workerList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    statusChange(event) {\n        var data = {\n            \"status\" : \"CLOSED\"\n        };\n        AdminService.changeProjectStatus(this.state.item.id,data).then(\n            response => {\n                this.showPopupMessage(response.data.message);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    handleWorkerSelection(event) {\n        this.state.selectedWorker = this.state.workerList.find(o => o.id == event.target.value);\n    }\n    addWorker(event) {\n            debugger;\n            this.state.selectedWorker['required_hrs'] = this.state.item.workerRequired;\n            //this.state.selectedWorker['est_cost'] = parseInt(this.state.item.workerRequired) * parseInt(this.state.selectedWorker.cost_per_hr);\n            var selectedProject = this.state.item;\n            if(!selectedProject.workers){\n                selectedProject['workers'] = [];\n            }\n            selectedProject.workers.push(this.state.selectedWorker);\n            this.setState({ item: selectedProject });\n            console.log(this.state.item);\n        \n    }\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"col edit-inventory\">\n                    <div className=\"list-group-header section-header row\">\n                        <div className=\"col-4\">\n\n                            <nav aria-label=\"breadcrumb\">\n                                <ul className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                        <span className=\"mb-1 underline\">Manage</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Project</span>\n                                    </li>\n                                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                                        <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Project</span>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                        </div>\n                        <div className=\"col-8 text-right\">\n                            <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                            <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveProject()}>Save</button>\n                        </div>\n                    </div>\n\n                    <div className=\"blue-box-div row\">\n                        <div className=\"col white-border-right\">\n                            <div>\n                                <span>Project Name</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.name}\n                                    onChange={this.handleChange.bind(this, 'name')} />\n                            </div>\n                            <div>\n                                <span>Description</span>\n                                <textarea className=\"form-control\" rows=\"3\"\n                                    defaultValue={this.state.item.desc}\n                                    onChange={this.handleChange.bind(this, 'desc')}></textarea>\n                            </div>\n\n                            <div>\n                                <span>Start Date</span>\n                                <DatePicker\n                                    selected={new Date(this.state.item.start_date)}\n                                    onChange={this.handleDateChange.bind(this, 'start_date')}\n                                    className=\"form-control\"\n                                    minDate = {new Date()}\n                                />\n                            </div>\n                            <div>\n                                <span>End Date</span>\n                                <DatePicker\n                                    selected={new Date(this.state.item.end_date)}\n                                    onChange={this.handleDateChange.bind(this, 'end_date')}\n                                    className=\"form-control\"\n                                    minDate={new Date(this.state.item.start_date)}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"col\">\n                            \n\n                        <div className=\"row\">\n                                <div className=\"col\"><span>Worker</span></div>\n                                <div className=\"col\"><span>Required Hours</span></div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <select className=\"form-control\" onChange={this.handleWorkerSelection.bind(this)}>\n                                        <option selected>Select Worker</option>\n                                        {this.state.workerList.map((item) => (\n                                            <option key={item.id} value={item.id}>{item.name}</option>\n                                        ))}\n                                    </select>\n                                </div>\n\n                                <div className=\"col\">\n                                    <input type=\"number\" className=\"form-control col-2 d-inline\" onChange={this.handleChange.bind(this, 'workerRequired')}/>\n                                    <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4 d-inline\" onClick={this.addWorker.bind(this)}>Add</button>\n                                </div>\n\n                            </div>\n\n                            <div className=\"row mt-1 quote-req-header font-weight-bold\">\n                                    <div className=\"col-sm\">\n                                        <label>Name</label>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <label>Profession</label>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <label>Available Hours </label>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <label>Required Hours</label>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <label>Cost per hour</label>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <label>Estimated Cost</label>\n                                    </div>\n                                </div>\n\n\n                                {this.state.item.workers && this.state.item.workers.map(listitem => (\n\n<div className=\"row mt-1\" >\n    <div className=\"col-sm\" >\n        <label className=\"description-truncate text-truncate\">{listitem.name}</label>\n    </div>\n    <div className=\"col-sm\" >\n        <label>{listitem.name}</label>\n    </div>\n    <div className=\"col-sm\" >\n        <label>{ listitem.avail_per_day}</label>\n    </div>\n    <div className=\"col-sm\" >\n        <label>{ listitem.required_hrs}</label>\n    </div>\n    <div className=\"col-sm\" >\n        <label>{ listitem.cost_per_hr}</label>\n    </div>\n    <div className=\"col-sm\" >\n        <label>{listitem.cost_per_hr * listitem.required_hrs}</label>\n    </div>\n</div>\n\n))}\n\n\n                            <div className=\"row\">\n                            <button type=\"button\" className=\"btn btn-green btn-sm m-4 pr-4 pl-4 d-inline\" onClick={this.statusChange.bind(this)}>Project Completed</button>\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n\n                <Popup popupConfig={this.state.popupConfig} openFlag={this.state.isPopupOpen} parentCloseCallback={this.handleClose} ></Popup>\n            </React.Fragment>\n        );\n    }\n}\nexport default EditProject;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageCustomer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditCustomer.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageInspections.js",["221"],"import React, { Component } from 'react';\nimport Popup from \"../components/Popup\";\nimport { validationMessages } from '../common/Constants';\n\nimport AdminService from \"../services/admin.service\";\n\n\nclass ManageInspection extends Component {\n    state = {\n        \n        selectedItem: [],\n        editInspectionPage: false,\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n        this.getAllInspectionList();\n    }\n    getAllInspectionList() {\n        AdminService.getAllInspection().then(\n            response => {\n                if(response){\n                    this.setState({\n                        listitems: response.data.inspections.rows\n                    });\n                }\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n\n    editInspection() {\n       \n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                editInspectionPage: true\n            });\n        }\n    }\n    addInspection() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editInspectionPage: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n\n    handleModalYes = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n        AdminService.deleteInspection(this.state.selectedItem.id).then(\n            response => {\n                this.showPopup(response.data.message);\n                var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n                this.setState({\n                    listitems: tempList,\n                    selectedItem: []\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );  \n    }\n\n    deleteInspection() {\n        /*var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n        this.setState({\n            listitems: tempList\n        });\n        */\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Confirm to Delete\",\n                    body:validationMessages.DELETE_CONFIRM+this.state.selectedItem.name,\n                    type: \"confirmation\"\n                }\n            });\n        }\n\n    }\n    onInspectionSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            editInspectionPage: false\n        });\n    }\n    handleFormChange(propertyName, event) {\n       \n    }\n    saveTaxUpdate() {\n\n    }\n    handleBreadCrumb() {\n        this.setState({\n            editInspectionPage: false\n        });\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.selectedItem;\n        item[propertyName] = event.target.value;\n        this.setState({ selectedItem: item });\n    }\n    showPopup(message){\n        this.setState({\n            isPopupOpen: true,\n            popupConfig : {\n                header: \"Message\",\n                body:message,\n                type: \"message\"\n            }\n        });\n    }\n    saveInspection() {\n        if(this.state.selectedItem.id !== undefined) {\n            var data = {\n                \"name\": this.state.selectedItem.name,\n                \"cost\": parseInt(this.state.selectedItem.cost),\n                \"desc\": this.state.selectedItem.desc\n            };\n\n            AdminService.editInspection(this.state.selectedItem.id ,data).then(\n                response => {\n                    if(response){\n                        this.showPopup(response.data.message);\n                    }\n                },\n                error => {\n                  console.log(\"Error\");\n                }\n              );\n            \n\n\n        } else {\n            var data = {\n                \"name\": this.state.selectedItem.name,\n                \"cost\": parseInt(this.state.selectedItem.cost),\n                \"desc\": this.state.selectedItem.desc\n            };\n            AdminService.createInspection(data).then(\n                response => {\n                    if(response){\n                        this.showPopup(response.data.message);\n                    }\n                },\n                error => {\n                  console.log(\"Error\");\n                }\n              );\n            \n        }\n        \n    }\n  \n    renderEditInspection() {\n        return(<div className=\"col edit-customer\">\n        <div className=\"list-group-header section-header row\">\n            <div className=\"col-6\">\n\n                <nav aria-label=\"breadcrumb\">\n                    <ul className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Inspection</span>\n                        </li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                            <span className=\"mb-1\">{(this.state.selectedItem.length !== 0) ? 'Edit' : 'Add'}</span>\n                            <span className=\"mb-1 blue-color pl-2\">Customer</span>\n                        </li>\n                    </ul>\n                </nav>\n\n            </div>\n            <div className=\"col-6 text-right\">\n                <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\"  >Reset</button>\n                <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveInspection()}>Save</button>\n            </div>\n        </div>\n\n        <div className=\"blue-box-div row\">\n            <div className=\"col\">\n                <div>\n                    <span>Inspection Name</span>\n                    <input type=\"text\"\n                        className=\"form-control\" defaultValue={this.state.selectedItem.name}\n                        onChange={this.handleChange.bind(this, 'name')} />\n                </div>\n                \n                <div>\n                    <span>Description</span>\n                    <textarea className=\"form-control\" rows=\"3\" \n                                    defaultValue={this.state.selectedItem.desc}\n                                    onChange={this.handleChange.bind(this, 'desc')}\n                        ></textarea>\n                \n                </div>\n                <div>\n                    <span>Cost</span>\n                    <input type=\"number\"\n                        className=\"form-control\"  defaultValue={this.state.selectedItem.cost}\n                        onChange={this.handleChange.bind(this, 'cost')}/>\n                </div>\n                \n                \n            </div>\n           \n\n        </div>\n\n\n\n    </div>);\n    }\n    renderTax() {\n        return(\n            <div className=\"col admin-list-page\">\n                <div className=\"list-group-header section-header row\">\n                <div className=\"col-3\">\n                    <span className=\"mb-1 underline\">Manage</span>\n                    <span className=\"mb-1 blue-color pl-2\">Tax</span> \n                </div>\n            </div>\n            <div className=\"col-6 blue-box-div tax-div d-inline-block\">\n                            <label className=\"pr-2\">Tax</label>\n                            <input type=\"number\" className=\"form-control d-inline-block\"\n                                        \n                                        onChange={this.handleFormChange.bind(this, 'tax')}\n                                    />\n                            <label className=\"pl-2\">%</label>\n\n\n              <button type=\"button\" className=\"btn btn-info btn-sm float-right mr-4\" onClick={() => this.saveTaxUpdate()}>Update</button>\n\n            </div>\n            </div>\n        );\n    }\n    renderInspectionList() {\n        return (<div className=\"col admin-list-page\">\n            <div className=\"list-group-header section-header row\">\n                <div className=\"col-6\">\n                    <span className=\"mb-1 underline\">Manage</span>\n                    <span className=\"mb-1 blue-color pl-2\">Inspection</span>\n\n                    \n                </div>\n                <div className=\"col-6 text-right inspection-btngrp pt-2\">\n                    <button className=\"btn delete-btn\" onClick={() => this.deleteInspection()}></button>\n                    <button className=\"btn edit-btn\" onClick={() => this.editInspection()}></button>\n                    <button className=\"btn add-btn\" onClick={() => this.addInspection()}></button>\n                    \n                </div>\n\n\n            </div>\n            <div className=\"quote-req-list \">\n                <div className=\"row mt-1 quote-req-header\">\n                    <div className=\"col-sm\">\n                        <label>Inspection Name</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Inspection Desc</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Inspection Cost</label>\n                    </div>\n                </div>\n                <div className=\"quote-req-table\">\n                    {this.state.listitems && this.state.listitems.map(listitem => (\n                            <div className=\"row mt-1\" key={listitem.id}>\n                                <div className=\"col-sm\" >\n                                    <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                        <input type=\"radio\" className=\"toggle\"\n                                            name=\"quoteItem\" value={listitem.id}\n                                            onChange={() => this.onInspectionSelected(listitem)} />\n                                        {listitem.name}\n                                    </label>\n\n                                </div>\n                                <div className=\"col-sm\" >\n                                    <label className=\"\">{listitem.desc}</label>\n                                </div>\n                                <div className=\"col-sm\" >\n                                    <label className=\"\">{listitem.cost}</label>\n                                </div>\n                            </div>\n                        ))}\n                </div>\n            </div>\n           \n        </div>);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {!this.state.editInspectionPage && this.renderInspectionList()}\n                {this.state.editInspectionPage && this.renderEditInspection()}\n                {this.renderTax()}\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} parentConfirmCallback = {this.handleModalYes.bind(this)}></Popup>\n            </React.Fragment>\n        );\n    }\n}\nexport default ManageInspection;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/auth.service.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/admin.service.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Upload.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/user.service.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ForgotPassword.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/EditQuote.js",["222","223","224","225","226","227","228"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/admin/ManageQuote.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/MyAlert.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Popup.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Sidebar.js",["229"],"import React, { Component } from 'react';\nclass Sidebar extends Component {\n\n    \n    constructor(props) {\n        super(props); \n        this.state = {\n            activeLink: 1,\n            leftMenu: []\n        } \n        this.selectMenu();\n    }\n    selectMenu() {\n        var adminFlag = JSON.parse(localStorage.getItem('user')).admin;\n        var menu = [];\n        if (adminFlag) {\n            menu = [\n                {\n                    id: 1,\n                    name: \"Quotes\",\n                    className: \"nav-quote-req\" \n                },\n                {\n                    id: 2,\n                    name: \"Projects \",\n                    className: \"nav-projects \"\n                },\n                {\n                    id: 3,\n                    name: \"Operations\",\n                    className: \"nav-operations\"\n                },\n                {\n                    id: 4,\n                    name: \"Inventory\",\n                    className: \"nav-inventory\"\n                },\n                {\n                    id: 5,\n                    name: \"Worker\",\n                    className: \"nav-workers\"\n                },\n                {\n                    id: 6,\n                    name: \"Customer\",\n                    className: \"nav-customer\"\n                },\n                {\n                    id: 7,\n                    name: \"Inspection\",\n                    className: \"nav-inspection\"\n                }\n            ];\n           \n        } else {\n             menu = [\n                {\n                    id: 1,\n                    name: \"Projects \",\n                    className: \"nav-projects \"\n                },\n                {\n                    id: 2,\n                    name: \"Operations\",\n                    className: \"nav-operations\"\n                },\n                {\n                    id: 3,\n                    name: \"Schedule\",\n                    className: \"nav-schedule\"\n                }\n            ];\n        }\n        this.state.leftMenu = menu\n    }\n    selectMenuItem(id) {\n        this.setState({ activeLink: id });\n        this.props.onClick(id);\n    }\n\n\n    render() {\n        \n        const { leftMenu, activeLink } = this.state;\n        return (\n            <React.Fragment>\n\n                    <div className=\"sidebar-div\">\n                        <ul className=\"nav flex-column\">\n                            {leftMenu && leftMenu.map(item => {\n                                return (\n                                    <li className={\n                                        item.className +\n                                        (item.id === activeLink ? \" nav-item active_item\" : \" nav-item\")\n                                      } key = {item.id}>\n                                        <p className=\"nav-link\" data-toggle=\"tab\" onClick={(e) => this.selectMenuItem(item.id)} >\n                                            <span>{item.name}</span>\n                                        </p>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                    \n                \n            </React.Fragment>\n        );\n    }\n}\nexport default Sidebar;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerDashboard.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerOperations.js",["230"],"import React, { Component } from 'react';\n\nimport jsonData from \"../../data/operationsData.json\";\nimport AdminService from \"../services/admin.service\";\n\nclass WorkerOperations extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: jsonData.operationsList,\n        selectedItem: [],\n        editOperationPage: false\n    }\n    constructor(props) {\n        super(props);\n        //this.getAllOperationList();\n    }\n    getAllOperationList() {\n        AdminService.getAllOperations().then(\n            response => {\n                this.setState({\n                    listitems: response.data.operations\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n   \n    onOperationSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editOperationPage:false\n          });\n    }\n    renderOperationsList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Operations</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search quote requests...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Operation Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Left</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n\n                           {this.state.listitems.filter(item =>\n                                item.o_name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"operationItem\" value={listitem.id}\n                                                    onChange={() => this.onOperationSelected(listitem)} />\n                                                {listitem.o_name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.o_desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.createdAt}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.updatedAt}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hoursCommited}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hoursLeft}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderOperationsList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default WorkerOperations;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerProjects.js",["231"],"import React, { Component } from 'react';\nimport {statusColorClass} from '../common/Utils.js';\n\nimport AdminService from \"../services/admin.service\";\n\nimport jsonData from \"../../data/projectData.json\";\n\nclass WorkerProjects extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: jsonData.projects,\n        selectedItem: [],\n        editProjectPage: false\n    }\n    constructor(props) {\n        super(props);\n        //this.getAllProjectList();\n    }\n    getAllProjectList() {\n        AdminService.getAllProjects().then(\n            response => {\n                this.setState({\n                    listitems: response.data.projects\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n          \n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    \n    onProjectSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editProjectPage:false\n          });\n    }\n    renderProjectList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"projects-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Projects</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search projects...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Project Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Left</label>\n                            </div>\n\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            \n                            \n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n                        \n                            {this.state.listitems.filter(item =>\n                                item.p_name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"projectItem\" value={listitem.id}\n                                                    onChange={() => this.onProjectSelected(listitem)} />\n                                                {listitem.p_name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.p_desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hours_commited}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hours_left}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.start_date)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.end_date)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className = {\"badge \" + statusColorClass(listitem.p_status)} >{listitem.p_status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderProjectList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default WorkerProjects;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/worker/WorkerTimesheet.js",["232"],"\nimport React, { Component } from 'react';\n\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject } from '@syncfusion/ej2-react-schedule';\n\nclass WorkerSchedule extends Component {\n    state = {\n       \n    }\n    constructor(props) {\n        super(props);\n        \n    }\n    render() {\n        return (\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n            <ScheduleComponent>\n    <Inject services={[Day, Week, WorkWeek, Month, Agenda]}/>\n</ScheduleComponent>\n</div>\n        );\n    }\n}\nexport default WorkerSchedule;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ToolsList.js",[],["233","234"],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/Checkbox.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/OperationList.js",["235"],"import React, { Component } from 'react';\n\nimport AdminService from \"../services/admin.service\";\n\nimport Checkbox from \"../components/Checkbox\";\n\nclass OperationList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            listitems: [],\n            searchValue: \"\"\n        }\n        this.getAllOperationList();\n    }\n\n    getAllOperationList() {\n        AdminService.getAllOperations().then(\n            response => {\n                console.log(response);\n                debugger;\n                this.setState({\n                    listitems: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    onTagOperationSelectedSave() {\n        this.props.popupClose(this.state.selectedItem);\n    }\n\n    onOperationSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"admin-list-page\">\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Operation Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n\n                        </div>\n\n                        <div className=\"quote-req-table\">\n                            {this.state.listitems && this.state.listitems.filter(item =>\n                                item.name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"operationItem\" value={listitem.id}\n                                                    onChange={() => this.onOperationSelected(listitem)} />\n                                                {listitem.name}\n                                            </label>\n\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.desc}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                        <button onClick={() => this.onTagOperationSelectedSave()} className=\"btn btn-success btn-sm\" >Save</button>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n\n    }\n}\nexport default OperationList;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/ConfigureOperation.js",["236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255"],"import React, { Component } from 'react';\nimport { Table } from 'reactstrap';\n\nimport Checkbox from \"../components/Checkbox\";\nimport TableRow from \"../components/TableRow\";\nimport TableHeader from \"../components/TableHeader\";\nimport AdminService from \"../services/admin.service\";\nimport MyAlert from \"../components/MyAlert\";\n\nclass ConfigureOperation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            listitems: [],\n            toolList: [],\n            workerList: [],\n            searchValue: \"\",\n            selectedToolList: [],\n            selectedWorkerList: [],\n            showAlert: false,\n            alertConfig: {\n                \"variant\": \"danger\"\n            },\n            totalCost: 0\n        }    \n        this.getData();\n    }\n\n    getData() {\n        if(this.props.showTools) {\n            this.getAllTools();\n        }\n        if(this.props.showWorkers) {\n            this.getAllWorkers();\n        }\n    }\n\n    getAllTools() {\n        AdminService.getAllInventory().then(\n            response => {\n                this.setState({\n                    toolList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    getAllWorkers() {\n        AdminService.getAllWorkers().then(\n            response => {\n                this.setState({\n                    workerList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    showAlertMessage(msg) {\n        this.setState(prevState => ({\n            alertConfig: { \n                ...prevState.alertConfig,\n                message: msg\n            },\n            showAlert: true \n        }))\n    }\n\n    handleCheckboxChange = changeEvent => {\n        const { name } = changeEvent.target;\n        let obj =[]; obj[\"Inventories\"] = this.state.toolList.find(o => o.id == name);\n        obj[\"req_quantity\"] = this.state.toolList.find(o => o.id == name).req_quantity;\n\n        if(!this.state.toolList.find(o => o.id == name).req_quantity){\n            this.showAlertMessage(\"Please add required quantity\");\n            changeEvent.target.checked = false;\n        }\n        else {\n            \n            this.setState({\n                showAlert: false\n            });\n            if (changeEvent.target.checked) {\n                this.state.selectedToolList.push(obj);\n                var tmpCost = this.state.totalCost + (obj.Inventories.cost * obj.Inventories.req_quantity);\n                this.setState({\n                    totalCost: tmpCost\n                });\n            } else {\n                let tmpObj = this.state.selectedToolList.filter(item => item.id !== name);\n                this.state.selectedToolList = tmpObj;\n                var tmpCost = this.state.totalCost - (obj.Inventories.cost * obj.Inventories.req_quantity);\n                this.setState({\n                    totalCost: tmpCost\n                });\n            }\n        }\n    };\n\n    handleWorkerCheckboxChange = changeEvent => {\n\n        const { name } = changeEvent.target;\n        let obj =[]; obj[\"Workers\"]= this.state.workerList.find(item => item.id == name);\n        obj[\"total_hrs_req\"] = this.state.workerList.find(item => item.id == name).total_hrs_req;\n\n        if(!this.state.workerList.find(o => o.id == name).total_hrs_req){\n            this.showAlertMessage(\"Please add required hours\");\n            changeEvent.target.checked = false;\n        }\n        else {\n            this.setState({\n                showAlert: false\n            });\n\n            if (changeEvent.target.checked) {\n                this.state.selectedWorkerList.push(obj)\n                var tmpCost = this.state.totalCost + (obj.Workers.cost_per_hr * obj.Workers.total_hrs_req);\n                this.setState({\n                    totalCost: tmpCost\n                });\n\n            } else {\n                let tmpObj = this.state.selectedWorkerList.filter(item => item.id != name);\n                this.state.selectedWorkerList = tmpObj;\n                var tmpCost = this.state.totalCost - (obj.Workers.cost_per_hr * obj.Workers.total_hrs_req);\n                this.setState({\n                    totalCost: tmpCost\n                });\n            }\n        }\n    };\n\n    reqQntyChange = changeEvent => {\n        const { name } = changeEvent.target;\n        let obj =[]; obj = this.state.toolList;\n        let sObj = []; sObj = this.state.selectedToolList;\n        if(obj.find(o => o.id == name)) {\n            obj.find(o => o.id == name)['req_quantity'] = changeEvent.target.value;\n        }\n        if(sObj.find(o => o.Inventories.id == name)) {\n            sObj.find(o => o.Inventories.id == name)['req_quantity'] = changeEvent.target.value;\n        }\n        this.setState({\n            toolList: obj,\n            selectedToolList: sObj\n        });\n    };\n    reqHourChange = changeEvent => {\n        const { name } = changeEvent.target;\n        \n        let obj =[]; obj = this.state.workerList;\n        let sObj = []; sObj = this.state.selectedWorkerList;\n        if(obj.find(o => o.id == name)) {\n            obj.find(o => o.id == name)['total_hrs_req'] = changeEvent.target.value;\n        }\n        if(sObj.find(o => o.Workers.id == name)) {\n            sObj.find(o => o.Workers.id == name)['total_hrs_req'] = changeEvent.target.value;\n        }\n        this.setState({\n            workerList: obj,\n            selectedWorkerList: sObj\n        }); \n    };\n\n    createToolRow = option => (\n        <TableRow\n            type=\"tool\"\n            listItem={option}\n            onCheckboxChange={this.handleCheckboxChange}\n            onreqQntyChange = {this.reqQntyChange}\n        />\n    );\n\n    createWorkerCheckbox = option => (\n        <TableRow\n            type=\"worker\"\n            listItem={option}\n            onCheckboxChange={this.handleWorkerCheckboxChange}\n            onreqQntyChange = {this.reqHourChange}\n        />\n    );\n    createTableHeader = (type) => {\n        var tableHeader = [];\n        if (type === \"tool\") {\n            tableHeader = [\"inputCheckbox\", \"Tool Name\", \"Available Quantity\", \"Required Quantity\", \"Cost\"];\n            return (\n                <TableHeader\n                    headerObj={tableHeader}\n                    onCheckboxChange={this.handleCheckboxChange}\n                />\n            );\n        } else if (\"worker\") {\n            tableHeader = [\"inputCheckbox\", \"Worker Name\", \"Available per Day\", \"Cost per Hour\", \"Required Hours\"];\n            return (\n                <TableHeader\n                    headerObj={tableHeader}\n                    onCheckboxChange={this.handleWorkerCheckboxChange}\n                />\n            );\n        }\n    };\n    createToolList = () => (\n        this.state.toolList.filter(item => item.itemName.toLowerCase().includes(this.state.searchValue)).map(this.createToolRow)\n    );\n    createWorkerList = () => (\n        this.state.workerList.filter(item => item.name.toLowerCase().includes(this.state.searchValue)).map(this.createWorkerCheckbox)\n    );\n    saveConfigOperation(e) {\n        var selectedObj = {};\n        selectedObj['tools'] = this.state.selectedToolList;\n        selectedObj['workers'] = this.state.selectedWorkerList;\n        selectedObj['totalCost'] = this.state.totalCost;\n        this.props.popupClose(selectedObj);\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                \n                {this.props.showTools && <div>\n                    <span className=\"underline blue\">Add Tools</span>\n                    <Table responsive=\"sm\">\n                        <tbody>\n                            {this.createTableHeader(\"tool\")}\n                            {this.createToolList()}\n                        </tbody>\n                    </Table>\n                    </div>\n                }\n                {this.props.showWorkers && \n                <div>\n                    <span className=\"underline blue\">Add Worker</span>\n\n                    <Table responsive=\"sm\">\n                        <tbody>\n                            {this.createTableHeader(\"worker\")}\n                            {this.createWorkerList()}\n                        </tbody>\n                    </Table>\n\n                </div>\n                }\n                <button onClick={this.saveConfigOperation.bind(this)} className=\"btn btn-success btn-sm\" > Save </button>\n\n                {this.state.showAlert && < MyAlert alertConfig = {this.state.alertConfig} showAlert={this.state.showAlert} /> }\n\n            </React.Fragment>\n        );\n\n    }\n}\nexport default ConfigureOperation;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableRow.js",[],"/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/components/TableHeader.js",["256"],"import React from \"react\";\n\nconst TableHeader = ({ headerObj, onCheckboxChange }) => {\n\n  return (\n    <tr className=\"green-text-color2\" key=\"tableHeade\">\n      {headerObj && headerObj.map((item, i) => {\n          if (item == \"inputCheckbox\") {\n            return (\n              <th key=\"0\" >\n                <input type=\"checkbox\" name=\"selectAllTools\" />\n              </th>\n            )\n          } else {\n            return (\n              <th key={item}>{item}</th>\n            )\n          }\n        }\n      )}\n    </tr>\n  );\n}\n\nexport default TableHeader;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/common/Profile.js",["257","258","259"],"import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Form, Input, InputGroup, Row } from \"reactstrap\";\nimport WorkerService from \"../services/worker.service\";\n\nclass Profile extends Component {\n    state = {\n        item:{}\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    saveProfile() {\n        var data = this.state.item;\n       console.log(data);\n       /* WorkerService.updateWorkerProfile(id, data).then(\n            response => {\n                console.log(response);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        ); \n        */\n    }\n    render() {\n        return (\n            <React.Fragment>\n\n                <CardGroup>\n                    <Card className=\"p-2\">\n                        <CardBody>\n                            <Form>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Enter Name\" onChange={this.handleChange.bind(this, 'name')} />\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Enter Phone Number\" onChange={this.handleChange.bind(this, 'phone')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Enter Address\" onChange={this.handleChange.bind(this, 'address')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Enter Email\" onChange={this.handleChange.bind(this, 'email')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Availability per day\" onChange={this.handleChange.bind(this, 'avail_per_day')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Cost per hour\" onChange={this.handleChange.bind(this, 'cost_per_hr')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Profession\" onChange={this.handleChange.bind(this, 'professionId')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3 justify-content-center\">\n                                    <Button color=\"success\"  onClick={() => this.saveProfile()}>Save</Button>\n                                </InputGroup>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </CardGroup>\n\n            </React.Fragment>\n        );\n    }\n}\nexport default Profile;","/Users/anoopkollengot/Documents/myWorkspace/fluentes_machine_app/src/js/services/worker.service.js",[],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":111,"column":40,"nodeType":"266","messageId":"267","endLine":111,"endColumn":42},{"ruleId":"264","severity":1,"message":"268","line":131,"column":69,"nodeType":"266","messageId":"267","endLine":131,"endColumn":71},{"ruleId":"269","severity":1,"message":"270","line":13,"column":5,"nodeType":"271","messageId":"272","endLine":15,"endColumn":6},{"ruleId":"273","severity":1,"message":"274","line":68,"column":29,"nodeType":"275","endLine":71,"endColumn":128},{"ruleId":"264","severity":1,"message":"265","line":45,"column":40,"nodeType":"266","messageId":"267","endLine":45,"endColumn":42},{"ruleId":"264","severity":1,"message":"268","line":96,"column":77,"nodeType":"266","messageId":"267","endLine":96,"endColumn":79},{"ruleId":"264","severity":1,"message":"265","line":402,"column":55,"nodeType":"266","messageId":"267","endLine":402,"endColumn":57},{"ruleId":"264","severity":1,"message":"265","line":432,"column":67,"nodeType":"266","messageId":"267","endLine":432,"endColumn":69},{"ruleId":"264","severity":1,"message":"265","line":68,"column":64,"nodeType":"266","messageId":"267","endLine":68,"endColumn":66},{"ruleId":"276","severity":1,"message":"277","line":96,"column":17,"nodeType":"278","endLine":96,"endColumn":40},{"ruleId":"279","severity":1,"message":"280","line":101,"column":21,"nodeType":"281","messageId":"282","endLine":101,"endColumn":38},{"ruleId":"276","severity":1,"message":"277","line":106,"column":17,"nodeType":"278","endLine":106,"endColumn":40},{"ruleId":"283","severity":1,"message":"284","line":138,"column":56,"nodeType":"285","messageId":"286","endLine":138,"endColumn":58},{"ruleId":"283","severity":1,"message":"284","line":148,"column":60,"nodeType":"285","messageId":"286","endLine":148,"endColumn":62},{"ruleId":"264","severity":1,"message":"268","line":165,"column":32,"nodeType":"266","messageId":"267","endLine":165,"endColumn":34},{"ruleId":"276","severity":1,"message":"277","line":97,"column":9,"nodeType":"278","endLine":97,"endColumn":19},{"ruleId":"264","severity":1,"message":"265","line":97,"column":74,"nodeType":"266","messageId":"267","endLine":97,"endColumn":76},{"ruleId":"276","severity":1,"message":"277","line":101,"column":13,"nodeType":"278","endLine":101,"endColumn":38},{"ruleId":"279","severity":1,"message":"287","line":157,"column":17,"nodeType":"281","messageId":"282","endLine":157,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":2,"column":10,"nodeType":"281","messageId":"290","endLine":2,"endColumn":16},{"ruleId":"288","severity":1,"message":"291","line":14,"column":8,"nodeType":"281","messageId":"290","endLine":14,"endColumn":21},{"ruleId":"283","severity":1,"message":"284","line":112,"column":110,"nodeType":"285","messageId":"286","endLine":112,"endColumn":112},{"ruleId":"283","severity":1,"message":"284","line":121,"column":116,"nodeType":"285","messageId":"286","endLine":121,"endColumn":118},{"ruleId":"264","severity":1,"message":"265","line":235,"column":60,"nodeType":"266","messageId":"267","endLine":235,"endColumn":62},{"ruleId":"279","severity":1,"message":"292","line":263,"column":11,"nodeType":"281","messageId":"282","endLine":263,"endColumn":14},{"ruleId":"264","severity":1,"message":"265","line":263,"column":82,"nodeType":"266","messageId":"267","endLine":263,"endColumn":84},{"ruleId":"276","severity":1,"message":"277","line":74,"column":9,"nodeType":"278","endLine":74,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":13,"column":5,"nodeType":"271","messageId":"272","endLine":16,"endColumn":6},{"ruleId":"269","severity":1,"message":"270","line":15,"column":5,"nodeType":"271","messageId":"272","endLine":18,"endColumn":6},{"ruleId":"269","severity":1,"message":"270","line":10,"column":5,"nodeType":"271","messageId":"272","endLine":13,"endColumn":6},{"ruleId":"260","replacedBy":"293"},{"ruleId":"262","replacedBy":"294"},{"ruleId":"288","severity":1,"message":"295","line":5,"column":8,"nodeType":"281","messageId":"290","endLine":5,"endColumn":16},{"ruleId":"288","severity":1,"message":"295","line":4,"column":8,"nodeType":"281","messageId":"290","endLine":4,"endColumn":16},{"ruleId":"264","severity":1,"message":"265","line":77,"column":78,"nodeType":"266","messageId":"267","endLine":77,"endColumn":80},{"ruleId":"264","severity":1,"message":"265","line":78,"column":66,"nodeType":"266","messageId":"267","endLine":78,"endColumn":68},{"ruleId":"264","severity":1,"message":"265","line":80,"column":48,"nodeType":"266","messageId":"267","endLine":80,"endColumn":50},{"ruleId":"276","severity":1,"message":"277","line":97,"column":17,"nodeType":"278","endLine":97,"endColumn":27},{"ruleId":"279","severity":1,"message":"296","line":98,"column":21,"nodeType":"281","messageId":"282","endLine":98,"endColumn":28},{"ruleId":"264","severity":1,"message":"265","line":109,"column":81,"nodeType":"266","messageId":"267","endLine":109,"endColumn":83},{"ruleId":"264","severity":1,"message":"265","line":110,"column":75,"nodeType":"266","messageId":"267","endLine":110,"endColumn":77},{"ruleId":"264","severity":1,"message":"265","line":112,"column":50,"nodeType":"266","messageId":"267","endLine":112,"endColumn":52},{"ruleId":"264","severity":1,"message":"268","line":129,"column":83,"nodeType":"266","messageId":"267","endLine":129,"endColumn":85},{"ruleId":"276","severity":1,"message":"277","line":130,"column":17,"nodeType":"278","endLine":130,"endColumn":27},{"ruleId":"279","severity":1,"message":"296","line":131,"column":21,"nodeType":"281","messageId":"282","endLine":131,"endColumn":28},{"ruleId":"264","severity":1,"message":"265","line":143,"column":31,"nodeType":"266","messageId":"267","endLine":143,"endColumn":33},{"ruleId":"264","severity":1,"message":"265","line":144,"column":32,"nodeType":"266","messageId":"267","endLine":144,"endColumn":34},{"ruleId":"264","severity":1,"message":"265","line":146,"column":44,"nodeType":"266","messageId":"267","endLine":146,"endColumn":46},{"ruleId":"264","severity":1,"message":"265","line":147,"column":45,"nodeType":"266","messageId":"267","endLine":147,"endColumn":47},{"ruleId":"264","severity":1,"message":"265","line":159,"column":31,"nodeType":"266","messageId":"267","endLine":159,"endColumn":33},{"ruleId":"264","severity":1,"message":"265","line":160,"column":32,"nodeType":"266","messageId":"267","endLine":160,"endColumn":34},{"ruleId":"264","severity":1,"message":"265","line":162,"column":40,"nodeType":"266","messageId":"267","endLine":162,"endColumn":42},{"ruleId":"264","severity":1,"message":"265","line":163,"column":41,"nodeType":"266","messageId":"267","endLine":163,"endColumn":43},{"ruleId":"264","severity":1,"message":"265","line":8,"column":20,"nodeType":"266","messageId":"267","endLine":8,"endColumn":22},{"ruleId":"288","severity":1,"message":"297","line":2,"column":45,"nodeType":"281","messageId":"290","endLine":2,"endColumn":48},{"ruleId":"288","severity":1,"message":"298","line":2,"column":75,"nodeType":"281","messageId":"290","endLine":2,"endColumn":78},{"ruleId":"288","severity":1,"message":"299","line":3,"column":8,"nodeType":"281","messageId":"290","endLine":3,"endColumn":21},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-redeclare","'selectedOperation' is already defined.","Identifier","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'data' is already defined.","no-unused-vars","'Button' is defined but never used.","unusedVar","'operationJson' is defined but never used.","'obj' is already defined.",["300"],["301"],"'Checkbox' is defined but never used.","'tmpCost' is already defined.","'Col' is defined but never used.","'Row' is defined but never used.","'WorkerService' is defined but never used.","no-global-assign","no-unsafe-negation"]